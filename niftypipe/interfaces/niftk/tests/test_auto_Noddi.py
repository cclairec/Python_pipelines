# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..nodditoolbox import Noddi


def test_Noddi_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    in_b0threshold=dict(mandatory=False,
    usedefault=True,
    ),
    in_bvals=dict(mandatory=True,
    ),
    in_bvecs=dict(mandatory=True,
    ),
    in_dwis=dict(mandatory=True,
    ),
    in_fname=dict(usedefault=True,
    ),
    in_mask=dict(mandatory=True,
    ),
    noise_scaling_factor=dict(usedefault=True,
    ),
    tissue_type=dict(usedefault=True,
    ),
    )
    inputs = Noddi.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_Noddi_outputs():
    output_map = dict(matlab_output=dict(),
    out_csf_volume_fraction=dict(genfile=True,
    ),
    out_error=dict(genfile=True,
    ),
    out_fibre_orientations_x=dict(genfile=True,
    ),
    out_fibre_orientations_y=dict(genfile=True,
    ),
    out_fibre_orientations_z=dict(genfile=True,
    ),
    out_kappa_concentration=dict(genfile=True,
    ),
    out_neural_density=dict(genfile=True,
    ),
    out_objective_function=dict(genfile=True,
    ),
    out_orientation_dispersion_index=dict(genfile=True,
    ),
    )
    outputs = Noddi.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value
