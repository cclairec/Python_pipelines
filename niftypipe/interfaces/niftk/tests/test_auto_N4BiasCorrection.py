# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..filters import N4BiasCorrection


def test_N4BiasCorrection_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    in_convergence=dict(argstr='--convergence %f',
    ),
    in_downsampling=dict(argstr='--sub %d',
    ),
    in_file=dict(argstr='-i %s',
    mandatory=True,
    ),
    in_fwhm=dict(argstr='--FWHM %f',
    ),
    in_levels=dict(argstr='--nlevels %d',
    ),
    in_maxiter=dict(argstr='--niters %d',
    ),
    mask_file=dict(argstr='--inMask %s',
    ),
    out_biasfield_file=dict(argstr='--outBiasField %s',
    name_source=['in_file'],
    name_template='%s_biasfield',
    ),
    out_file=dict(argstr='-o %s',
    name_source=['in_file'],
    name_template='%s_corrected',
    ),
    output_type=dict(),
    terminal_output=dict(nohash=True,
    ),
    )
    inputs = N4BiasCorrection.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_N4BiasCorrection_outputs():
    output_map = dict(out_biasfield_file=dict(),
    out_file=dict(),
    )
    outputs = N4BiasCorrection.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value
